@page "/"
@using Microsoft.AspNetCore.Components.Forms
@using StudyCardsGenerator.Attributes
@using StudyCardsGenerator.Services.Interfaces
@attribute [RequireAuthentication]

<PageTitle>Study Cards AI - AI-Powered Study Cards Generator</PageTitle>

<div class="w-full max-w-md space-y-8">
    <header class="text-center">
        <div class="flex items-center justify-center space-x-2 mb-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-white" viewBox="0 0 24 24" fill="none"
                stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polygon points="12 2 2 7 12 12 22 7 12 2" />
                <polyline points="2 17 12 22 22 17" />
                <polyline points="2 12 12 17 22 12" />
            </svg>
            <h1 class="text-4xl font-bold text-white">Study Cards AI</h1>
        </div>
        <p class="text-xl text-white">AI-Powered Study Cards Generator</p>
    </header>
    <div
        class="bg-white p-8 rounded-xl shadow-2xl space-y-6 transform transition-all duration-500 @(_isGenerating ? "scale-105" : "")">
        <h2 class="text-2xl font-bold tracking-tight text-center">
            Generate Your Study Cards
        </h2>
        <div>
            <label for="ai-model" class="block text-sm font-medium text-gray-700 mb-1">Choose AI Model</label>
            <select @bind="_selectedModel" id="ai-model" class="select-ai-model">
                <option value="">Select AI Model</option>
                <option value="gpt-4o-mini-2024-07-18">gpt-4o-mini (Cheaper)</option>
                <option value="gpt-4o-2024-08-06">gpt-4o (Most Capable)</option>
            </select>
        </div>
        <div>
            <label for="pdf-upload" class="block text-sm font-medium text-gray-700 mb-1">Upload PDF</label>
            <InputFile OnChange="@OnFileSelected" id="pdf-upload" accept=".pdf" class="hidden" />
            <label for="pdf-upload"
                class="flex flex-col items-center justify-center w-full h-32 px-4 transition bg-white border-2 border-gray-300 border-dashed rounded-md appearance-none cursor-pointer hover:border-purple-400 focus:outline-none">
                @if (_uploadedFile != null)
                {
                    <span class="flex items-center space-x-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-purple-600" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                        </svg>
                        <span class="font-medium text-purple-600">@_uploadedFile.Name</span>
                    </span>
                }
                else
                {
                    <span class="flex items-center space-x-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-gray-600" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                        </svg>
                        <span class="font-medium text-gray-600">Drop your PDF here, or <span
                                class="text-purple-600 underline">browse</span></span>
                    </span>
                }
            </label>
        </div>
        <button @onclick="GenerateStudycards"
            disabled="@(_isGenerating || string.IsNullOrEmpty(_selectedModel) || _uploadedFile == null)"
            class="w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200">
            @if (_isGenerating)
            {
                <span class="flex items-center justify-center">
                    <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4">
                        </circle>
                        <path class="opacity-75" fill="currentColor"
                            d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
                        </path>
                    </svg>
                    Generating...
                </span>
            }
            else
            {
                <span>Generate Study Cards</span>
            }
        </button>
    </div>
</div>

@code {
    private string _selectedModel = "";
    private IBrowserFile? _uploadedFile;
    private bool _isGenerating = false;
    private string? _errorMessage;

    [Inject]
    private IStudyCardService StudyCardService { get; set; } = default!;

    [Inject]
    public NavigationManager NavManager { get; set; } = default!;

    private void OnFileSelected(InputFileChangeEventArgs e)
    {
        _uploadedFile = e.File;
        _errorMessage = null;
    }

    private async Task GenerateStudycards()
    {
        if (string.IsNullOrEmpty(_selectedModel) || _uploadedFile == null)
        {
            return;
        }

        _isGenerating = true;
        _errorMessage = null;

        try
        {
            using var stream = _uploadedFile.OpenReadStream();
            var cards = await StudyCardService.GenerateStudyCardsAsync(
            stream,
            _uploadedFile.Name,
            10,
            _selectedModel
            );

            NavManager.NavigateTo("/study-cards");
        }
        catch (Exception ex)
        {
            _errorMessage = "Failed to generate study cards. Please try again.";
            Console.Error.WriteLine($"Error generating cards: {ex.Message}");
        }
        finally
        {
            _isGenerating = false;
        }
    }
}